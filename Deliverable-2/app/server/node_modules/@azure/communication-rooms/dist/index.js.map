{"version":3,"file":"index.js","sources":["../src/logger.ts","../src/tracing.ts","../src/generated/src/models/mappers.ts","../src/generated/src/models/parameters.ts","../src/generated/src/operations/rooms.ts","../src/generated/src/roomsApiClient.ts","../src/models/mappers.ts","../src/models/uuid.ts","../src/roomsClient.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createClientLogger } from \"@azure/logger\";\n\n/**\n * The \\@azure/logger configuration for this package.\n */\nexport const logger = createClientLogger(\"communication-rooms\");\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createTracingClient } from \"@azure/core-tracing\";\n\n/**\n * Creates a span using the global tracer.\n * @internal\n */\nexport const tracingClient = createTracingClient({\n  packageName: \"Azure.Communication\",\n  namespace: \"Microsoft.Communication\",\n});\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const CreateRoomRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CreateRoomRequest\",\n    modelProperties: {\n      validFrom: {\n        serializedName: \"validFrom\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      validUntil: {\n        serializedName: \"validUntil\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      roomJoinPolicy: {\n        serializedName: \"roomJoinPolicy\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"InviteOnly\", \"CommunicationServiceUsers\"]\n        }\n      },\n      participants: {\n        serializedName: \"participants\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoomParticipant\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RoomParticipant: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoomParticipant\",\n    modelProperties: {\n      communicationIdentifier: {\n        serializedName: \"communicationIdentifier\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationIdentifierModel\"\n        }\n      },\n      role: {\n        serializedName: \"role\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Presenter\", \"Attendee\", \"Consumer\"]\n        }\n      }\n    }\n  }\n};\n\nexport const CommunicationIdentifierModel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommunicationIdentifierModel\",\n    modelProperties: {\n      rawId: {\n        serializedName: \"rawId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      communicationUser: {\n        serializedName: \"communicationUser\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationUserIdentifierModel\"\n        }\n      }\n    }\n  }\n};\n\nexport const CommunicationUserIdentifierModel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommunicationUserIdentifierModel\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoomModel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoomModel\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      createdDateTime: {\n        serializedName: \"createdDateTime\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      validFrom: {\n        serializedName: \"validFrom\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      validUntil: {\n        serializedName: \"validUntil\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      roomJoinPolicy: {\n        serializedName: \"roomJoinPolicy\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"InviteOnly\", \"CommunicationServiceUsers\"]\n        }\n      },\n      participants: {\n        serializedName: \"participants\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoomParticipant\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CommunicationErrorResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommunicationErrorResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationError\"\n        }\n      }\n    }\n  }\n};\n\nexport const CommunicationError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommunicationError\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CommunicationError\"\n            }\n          }\n        }\n      },\n      innerError: {\n        serializedName: \"innererror\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationError\"\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateRoomRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpdateRoomRequest\",\n    modelProperties: {\n      validFrom: {\n        serializedName: \"validFrom\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      validUntil: {\n        serializedName: \"validUntil\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      roomJoinPolicy: {\n        serializedName: \"roomJoinPolicy\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"InviteOnly\", \"CommunicationServiceUsers\"]\n        }\n      },\n      participants: {\n        serializedName: \"participants\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoomParticipant\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ParticipantsCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ParticipantsCollection\",\n    modelProperties: {\n      participants: {\n        serializedName: \"participants\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoomParticipant\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const AddParticipantsRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AddParticipantsRequest\",\n    modelProperties: {\n      participants: {\n        serializedName: \"participants\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoomParticipant\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateParticipantsRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpdateParticipantsRequest\",\n    modelProperties: {\n      participants: {\n        serializedName: \"participants\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoomParticipant\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RemoveParticipantsRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RemoveParticipantsRequest\",\n    modelProperties: {\n      participants: {\n        serializedName: \"participants\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoomParticipant\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RoomsCreateRoomExceptionHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoomsCreateRoomExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoomsGetRoomExceptionHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoomsGetRoomExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoomsUpdateRoomExceptionHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoomsUpdateRoomExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoomsDeleteRoomExceptionHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoomsDeleteRoomExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoomsGetParticipantsExceptionHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoomsGetParticipantsExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoomsAddParticipantsExceptionHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoomsAddParticipantsExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoomsUpdateParticipantsExceptionHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoomsUpdateParticipantsExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoomsRemoveParticipantsExceptionHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoomsRemoveParticipantsExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  CreateRoomRequest as CreateRoomRequestMapper,\n  UpdateRoomRequest as UpdateRoomRequestMapper,\n  AddParticipantsRequest as AddParticipantsRequestMapper,\n  UpdateParticipantsRequest as UpdateParticipantsRequestMapper,\n  RemoveParticipantsRequest as RemoveParticipantsRequestMapper\n} from \"../models/mappers\";\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const createRoomRequest: OperationParameter = {\n  parameterPath: \"createRoomRequest\",\n  mapper: CreateRoomRequestMapper\n};\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const endpoint: OperationURLParameter = {\n  parameterPath: \"endpoint\",\n  mapper: {\n    serializedName: \"endpoint\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2022-02-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const repeatabilityRequestID: OperationParameter = {\n  parameterPath: [\"options\", \"repeatabilityRequestID\"],\n  mapper: {\n    serializedName: \"Repeatability-Request-ID\",\n    type: {\n      name: \"Uuid\"\n    }\n  }\n};\n\nexport const repeatabilityFirstSent: OperationParameter = {\n  parameterPath: [\"options\", \"repeatabilityFirstSent\"],\n  mapper: {\n    serializedName: \"Repeatability-First-Sent\",\n    type: {\n      name: \"DateTime\"\n    }\n  }\n};\n\nexport const roomId: OperationURLParameter = {\n  parameterPath: \"roomId\",\n  mapper: {\n    serializedName: \"roomId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const patchRoomRequest: OperationParameter = {\n  parameterPath: [\"options\", \"patchRoomRequest\"],\n  mapper: UpdateRoomRequestMapper\n};\n\nexport const addParticipantsRequest: OperationParameter = {\n  parameterPath: \"addParticipantsRequest\",\n  mapper: AddParticipantsRequestMapper\n};\n\nexport const updateParticipantsRequest: OperationParameter = {\n  parameterPath: \"updateParticipantsRequest\",\n  mapper: UpdateParticipantsRequestMapper\n};\n\nexport const removeParticipantsRequest: OperationParameter = {\n  parameterPath: \"removeParticipantsRequest\",\n  mapper: RemoveParticipantsRequestMapper\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Rooms } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { RoomsApiClient } from \"../roomsApiClient\";\nimport {\n  CreateRoomRequest,\n  RoomsCreateRoomOptionalParams,\n  RoomsCreateRoomResponse,\n  RoomsGetRoomOptionalParams,\n  RoomsGetRoomResponse,\n  RoomsUpdateRoomOptionalParams,\n  RoomsUpdateRoomResponse,\n  RoomsDeleteRoomOptionalParams,\n  RoomsGetParticipantsOptionalParams,\n  RoomsGetParticipantsResponse,\n  AddParticipantsRequest,\n  RoomsAddParticipantsOptionalParams,\n  RoomsAddParticipantsResponse,\n  UpdateParticipantsRequest,\n  RoomsUpdateParticipantsOptionalParams,\n  RoomsUpdateParticipantsResponse,\n  RemoveParticipantsRequest,\n  RoomsRemoveParticipantsOptionalParams,\n  RoomsRemoveParticipantsResponse\n} from \"../models\";\n\n/** Class containing Rooms operations. */\nexport class RoomsImpl implements Rooms {\n  private readonly client: RoomsApiClient;\n\n  /**\n   * Initialize a new instance of the class Rooms class.\n   * @param client Reference to the service client\n   */\n  constructor(client: RoomsApiClient) {\n    this.client = client;\n  }\n\n  /**\n   * Creates a new room.\n   * @param createRoomRequest The create room request body.\n   * @param options The options parameters.\n   */\n  createRoom(\n    createRoomRequest: CreateRoomRequest,\n    options?: RoomsCreateRoomOptionalParams\n  ): Promise<RoomsCreateRoomResponse> {\n    return this.client.sendOperationRequest(\n      { createRoomRequest, options },\n      createRoomOperationSpec\n    );\n  }\n\n  /**\n   * Retrieves an existing room by id.\n   * @param roomId The id of the room requested\n   * @param options The options parameters.\n   */\n  getRoom(\n    roomId: string,\n    options?: RoomsGetRoomOptionalParams\n  ): Promise<RoomsGetRoomResponse> {\n    return this.client.sendOperationRequest(\n      { roomId, options },\n      getRoomOperationSpec\n    );\n  }\n\n  /**\n   * Update a room with given changes.\n   * @param roomId The id of the room requested\n   * @param options The options parameters.\n   */\n  updateRoom(\n    roomId: string,\n    options?: RoomsUpdateRoomOptionalParams\n  ): Promise<RoomsUpdateRoomResponse> {\n    return this.client.sendOperationRequest(\n      { roomId, options },\n      updateRoomOperationSpec\n    );\n  }\n\n  /**\n   * Delete a room.\n   * @param roomId The id of the room to be deleted\n   * @param options The options parameters.\n   */\n  deleteRoom(\n    roomId: string,\n    options?: RoomsDeleteRoomOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { roomId, options },\n      deleteRoomOperationSpec\n    );\n  }\n\n  /**\n   * Get participants in a room.\n   * @param roomId The id of the room to get participants from\n   * @param options The options parameters.\n   */\n  getParticipants(\n    roomId: string,\n    options?: RoomsGetParticipantsOptionalParams\n  ): Promise<RoomsGetParticipantsResponse> {\n    return this.client.sendOperationRequest(\n      { roomId, options },\n      getParticipantsOperationSpec\n    );\n  }\n\n  /**\n   * Adds participants to a room. If participants already exist, no change occurs.\n   * @param roomId Room id to add participants.\n   * @param addParticipantsRequest Participants to be added to the room.\n   * @param options The options parameters.\n   */\n  addParticipants(\n    roomId: string,\n    addParticipantsRequest: AddParticipantsRequest,\n    options?: RoomsAddParticipantsOptionalParams\n  ): Promise<RoomsAddParticipantsResponse> {\n    return this.client.sendOperationRequest(\n      { roomId, addParticipantsRequest, options },\n      addParticipantsOperationSpec\n    );\n  }\n\n  /**\n   * Update participants in a room.\n   * @param roomId The room id.\n   * @param updateParticipantsRequest Participants in a room to be updated.\n   * @param options The options parameters.\n   */\n  updateParticipants(\n    roomId: string,\n    updateParticipantsRequest: UpdateParticipantsRequest,\n    options?: RoomsUpdateParticipantsOptionalParams\n  ): Promise<RoomsUpdateParticipantsResponse> {\n    return this.client.sendOperationRequest(\n      { roomId, updateParticipantsRequest, options },\n      updateParticipantsOperationSpec\n    );\n  }\n\n  /**\n   * Remove participants from a room.\n   * @param roomId Room id to remove the participants from.\n   * @param removeParticipantsRequest Participants in a room to be removed.\n   * @param options The options parameters.\n   */\n  removeParticipants(\n    roomId: string,\n    removeParticipantsRequest: RemoveParticipantsRequest,\n    options?: RoomsRemoveParticipantsOptionalParams\n  ): Promise<RoomsRemoveParticipantsResponse> {\n    return this.client.sendOperationRequest(\n      { roomId, removeParticipantsRequest, options },\n      removeParticipantsOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createRoomOperationSpec: coreClient.OperationSpec = {\n  path: \"/rooms\",\n  httpMethod: \"POST\",\n  responses: {\n    201: {\n      bodyMapper: Mappers.RoomModel\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.RoomsCreateRoomExceptionHeaders\n    }\n  },\n  requestBody: Parameters.createRoomRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.repeatabilityRequestID,\n    Parameters.repeatabilityFirstSent\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst getRoomOperationSpec: coreClient.OperationSpec = {\n  path: \"/rooms/{roomId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoomModel\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.RoomsGetRoomExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.roomId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateRoomOperationSpec: coreClient.OperationSpec = {\n  path: \"/rooms/{roomId}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoomModel\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.RoomsUpdateRoomExceptionHeaders\n    }\n  },\n  requestBody: Parameters.patchRoomRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.roomId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteRoomOperationSpec: coreClient.OperationSpec = {\n  path: \"/rooms/{roomId}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.RoomsDeleteRoomExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.roomId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getParticipantsOperationSpec: coreClient.OperationSpec = {\n  path: \"/rooms/{roomId}/participants\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ParticipantsCollection\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.RoomsGetParticipantsExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.roomId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst addParticipantsOperationSpec: coreClient.OperationSpec = {\n  path: \"/rooms/{roomId}/participants:add\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ParticipantsCollection\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.RoomsAddParticipantsExceptionHeaders\n    }\n  },\n  requestBody: Parameters.addParticipantsRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.roomId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst updateParticipantsOperationSpec: coreClient.OperationSpec = {\n  path: \"/rooms/{roomId}/participants:update\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ParticipantsCollection\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.RoomsUpdateParticipantsExceptionHeaders\n    }\n  },\n  requestBody: Parameters.updateParticipantsRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.roomId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst removeParticipantsOperationSpec: coreClient.OperationSpec = {\n  path: \"/rooms/{roomId}/participants:remove\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ParticipantsCollection\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.RoomsRemoveParticipantsExceptionHeaders\n    }\n  },\n  requestBody: Parameters.removeParticipantsRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.roomId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest\n} from \"@azure/core-rest-pipeline\";\nimport { RoomsImpl } from \"./operations\";\nimport { Rooms } from \"./operationsInterfaces\";\nimport { RoomsApiClientOptionalParams } from \"./models\";\n\nexport class RoomsApiClient extends coreClient.ServiceClient {\n  endpoint: string;\n  apiVersion: string;\n\n  /**\n   * Initializes a new instance of the RoomsApiClient class.\n   * @param endpoint The endpoint of the Azure Communication resource.\n   * @param options The parameter options\n   */\n  constructor(endpoint: string, options?: RoomsApiClientOptionalParams) {\n    if (endpoint === undefined) {\n      throw new Error(\"'endpoint' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: RoomsApiClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\"\n    };\n\n    const packageDetails = `azsdk-js-communication-rooms/1.2.0-beta.1`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      baseUri: options.endpoint ?? options.baseUri ?? \"{endpoint}\"\n    };\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.endpoint = endpoint;\n\n    // Assigning values to Constant parameters\n    this.apiVersion = options.apiVersion || \"2022-02-01\";\n    this.rooms = new RoomsImpl(this);\n    this.addCustomApiVersionPolicy(options.apiVersion);\n  }\n\n  /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */\n  private addCustomApiVersionPolicy(apiVersion?: string) {\n    if (!apiVersion) {\n      return;\n    }\n    const apiVersionPolicy = {\n      name: \"CustomApiVersionPolicy\",\n      async sendRequest(\n        request: PipelineRequest,\n        next: SendRequest\n      ): Promise<PipelineResponse> {\n        const param = request.url.split(\"?\");\n        if (param.length > 1) {\n          const newParams = param[1].split(\"&\").map((item) => {\n            if (item.indexOf(\"api-version\") > -1) {\n              return \"api-version=\" + apiVersion;\n            } else {\n              return item;\n            }\n          });\n          request.url = param[0] + \"?\" + newParams.join(\"&\");\n        }\n        return next(request);\n      }\n    };\n    this.pipeline.addPolicy(apiVersionPolicy);\n  }\n\n  rooms: Rooms;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport * as RestModel from \"../generated/src/models\";\nimport { Room, RoomParticipant } from \"./models\";\nimport {\n  CommunicationUserIdentifier,\n  SerializedCommunicationIdentifier,\n} from \"@azure/communication-common\";\nimport {\n  deserializeCommunicationIdentifier,\n  getIdentifierKind,\n  serializeCommunicationIdentifier,\n} from \"@azure/communication-common\";\n\n/**\n * @internal\n * Mapping room participant customer model to room participant REST model.\n */\nexport const mapToRoomParticipantRestModel = (\n  roomParticipant: RoomParticipant\n): RestModel.RoomParticipant => {\n  const { id, ...rest } = roomParticipant;\n  if (getIdentifierKind(id).kind !== \"communicationUser\") {\n    throwException(\"We currently only support CommunicationUsers\");\n  }\n  return {\n    communicationIdentifier: serializeCommunicationIdentifier(id),\n    ...rest,\n  };\n};\n\n/**\n * Mapping CommunicationUserIdentifier to room participant REST model.\n */\nexport const mapCommunicationIdentifierToRoomParticipantRestModel = (\n  communicationIdentifier: CommunicationUserIdentifier\n): RestModel.RoomParticipant => {\n  return {\n    communicationIdentifier: serializeCommunicationIdentifier(communicationIdentifier),\n  };\n};\n\n/**\n * @internal\n * Mapping room participant REST model to room participant SDK model.\n */\nexport const mapToRoomParticipantSdkModel = (\n  roomParticipant: RestModel.RoomParticipant\n): RoomParticipant => {\n  const { communicationIdentifier, ...rest } = roomParticipant;\n  return {\n    id: deserializeCommunicationIdentifier(\n      communicationIdentifier as SerializedCommunicationIdentifier\n    ),\n    ...rest,\n  };\n};\n\n/**\n * @internal\n * Mapping room REST model to room SDK model.\n */\nexport const mapToRoomSdkModel = (result: RestModel.RoomModel): Room => {\n  const { id, createdDateTime, participants, roomJoinPolicy, ...rest } = result;\n  return {\n    id: id ?? throwException(\"Room ID cannot be null.\"),\n    createdOn: createdDateTime,\n    participants: participants?.map((participant) => mapToRoomParticipantSdkModel(participant)),\n    joinPolicy: roomJoinPolicy,\n    ...rest,\n  };\n};\n\nfunction throwException(errorMessage: string): never {\n  throw new Error(errorMessage);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { v4 as uuidv4 } from \"uuid\";\n\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n * @internal\n */\nexport function generateUuid(): string {\n  return uuidv4();\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { InternalClientPipelineOptions } from \"@azure/core-client\";\nimport { KeyCredential, TokenCredential } from \"@azure/core-auth\";\nimport {\n  CommunicationUserIdentifier,\n  createCommunicationAuthPolicy,\n  isKeyCredential,\n  parseClientArguments,\n} from \"@azure/communication-common\";\n\nimport { logger } from \"./logger\";\nimport { tracingClient } from \"./tracing\";\nimport { RoomsApiClient } from \"./generated/src\";\nimport {\n  mapCommunicationIdentifierToRoomParticipantRestModel,\n  mapToRoomParticipantRestModel,\n  mapToRoomParticipantSdkModel,\n  mapToRoomSdkModel,\n} from \"./models/mappers\";\nimport { Room, RoomParticipant } from \"./models/models\";\nimport {\n  AddParticipantsOptions,\n  CreateRoomOptions,\n  DeleteRoomOptions,\n  GetParticipantsOptions,\n  GetRoomOptions,\n  RemoveParticipantsOptions,\n  RoomsClientOptions,\n  UpdateParticipantsOptions,\n  UpdateRoomOptions,\n} from \"./models/options\";\nimport { generateUuid } from \"./models/uuid\";\n\n/**\n * @internal\n * Checks whether the type of a value is RoomsClientOptions or not.\n * @param options - The value being checked.\n */\nconst isRoomsClientOptions = (options: any): options is RoomsClientOptions =>\n  !!options && !isKeyCredential(options);\n\n/**\n * The Rooms service client.\n */\nexport class RoomsClient {\n  private readonly client: RoomsApiClient;\n\n  /**\n   * Initializes a new instance of the RoomsClient class.\n   * @param connectionString - Connection string to connect to an Azure Communication Service resource.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(connectionString: string, options?: RoomsClientOptions);\n\n  /**\n   * Initializes a new instance of the RoomsClient using an Azure KeyCredential\n   * @param endpoint - The url of the Communication Services resource\n   * @param credential - An object that is used to authenticate requests to the service. Use the Azure KeyCredential or `@azure/identity` to create a credential.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(endpoint: string, credential: KeyCredential, options?: RoomsClientOptions);\n\n  /**\n   * Initializes a new instance of the RoomsClient using a TokenCredential\n   * @param endpoint - The url of the Communication Services resource\n   * @param credential - An object that is used to authenticate requests to the service. Use the AzureCommunicationTokenCredential from `@azure/communication-common` to create a credential.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(endpoint: string, credential: TokenCredential, options?: RoomsClientOptions);\n\n  constructor(\n    connectionStringOrUrl: string,\n    credentialOrOptions?: RoomsClientOptions | KeyCredential | TokenCredential,\n    maybeOptions: RoomsClientOptions = {}\n  ) {\n    const { url, credential } = parseClientArguments(connectionStringOrUrl, credentialOrOptions);\n    const options = isRoomsClientOptions(credentialOrOptions) ? credentialOrOptions : maybeOptions;\n\n    const internalPipelineOptions: InternalClientPipelineOptions = {\n      ...options,\n      ...{\n        loggingOptions: {\n          logger: logger.info,\n        },\n      },\n    };\n\n    this.client = new RoomsApiClient(url, { endpoint: url, ...internalPipelineOptions });\n\n    const authPolicy = createCommunicationAuthPolicy(credential);\n\n    this.client.pipeline.addPolicy(authPolicy);\n  }\n\n  /**\n   * Creates a new room asynchronously.\n   * @param request - Request for creating a room.\n   * @param options - Operation options.\n   * @returns a RoomModel object with the values of the created room.\n   */\n  public async createRoom(options: CreateRoomOptions = {}): Promise<Room> {\n    const repeatabilityRequestId = generateUuid();\n    const repeatabilityFirstSent = new Date();\n    return tracingClient.withSpan(\"RoomsClient-CreateRoom\", options, async (updatedOptions) => {\n      const result = await this.client.rooms.createRoom(\n        {\n          ...options,\n          participants: options.participants?.map((participant) =>\n            mapToRoomParticipantRestModel(participant)\n          ),\n        },\n        {\n          ...updatedOptions,\n          repeatabilityFirstSent: repeatabilityFirstSent,\n          repeatabilityRequestID: repeatabilityRequestId,\n        }\n      );\n      return mapToRoomSdkModel(result);\n    });\n  }\n\n  /**\n   * Updates a room asynchronously.\n   * @param roomId - ID of the room.\n   * @param request - Request for updating a room.\n   * @param options - Operational options.\n   * @returns a RoomModel object with the values of the created room.\n   */\n  public async updateRoom(roomId: string, options: UpdateRoomOptions = {}): Promise<Room> {\n    return tracingClient.withSpan(\"RoomsClient-UpdateRoom\", options, async (updatedOptions) => {\n      const result = await this.client.rooms.updateRoom(roomId, {\n        patchRoomRequest: {\n          ...options,\n          participants: options.participants?.map((participant) =>\n            mapToRoomParticipantRestModel(participant)\n          ),\n        },\n        ...updatedOptions,\n      });\n      return mapToRoomSdkModel(result);\n    });\n  }\n\n  /**\n   * Gets a room by id asynchronously.\n   * @param roomId - ID of the room.\n   * @param options - Operational options.\n   * @returns a RoomModel object with the values of the created room.\n   */\n  public async getRoom(roomId: string, options: GetRoomOptions = {}): Promise<Room> {\n    return tracingClient.withSpan(\"RoomsClient-GetRoom\", options, async (updatedOptions) => {\n      return mapToRoomSdkModel(await this.client.rooms.getRoom(roomId, updatedOptions));\n    });\n  }\n\n  /**\n   * Deletes a room by id asynchronously.\n   * @param roomId - ID of the room.\n   * @param options - Operational options.\n   */\n  public async deleteRoom(roomId: string, options: DeleteRoomOptions = {}): Promise<void> {\n    return tracingClient.withSpan(\"RoomsClient-DeleteRoom\", options, async (updatedOptions) => {\n      await this.client.rooms.deleteRoom(roomId, updatedOptions);\n    });\n  }\n\n  /**\n   * Gets the participants of a room asynchronously.\n   * @param roomId - ID of the room.\n   * @param options - Operational options.\n   * @returns a list of all the participants in the room.\n   */\n  public async getParticipants(\n    roomId: string,\n    options: GetParticipantsOptions = {}\n  ): Promise<RoomParticipant[]> {\n    return tracingClient.withSpan(\n      \"RoomsClient-GetParticipants\",\n      options,\n      async (updatedOptions) => {\n        const result = await this.client.rooms.getParticipants(roomId, updatedOptions);\n        return result.participants.map((participant) => mapToRoomParticipantSdkModel(participant));\n      }\n    );\n  }\n\n  /**\n   * Adds Participants to a room asynchronously\n   * @param roomId - ID of the room.\n   * @param request - Request for adding participants to a room.\n   * @param options - Operational options.\n   * @returns a list of all the participants in the room.\n   */\n  public async addParticipants(\n    roomId: string,\n    participants: RoomParticipant[],\n    options: AddParticipantsOptions = {}\n  ): Promise<void> {\n    return tracingClient.withSpan(\n      \"RoomsClient-AddParticipants\",\n      options,\n      async (updatedOptions) => {\n        await this.client.rooms.addParticipants(\n          roomId,\n          {\n            participants: participants.map((participant) =>\n              mapToRoomParticipantRestModel(participant)\n            ),\n          },\n          updatedOptions\n        );\n      }\n    );\n  }\n\n  /**\n   * Updates the Participants in a Room asynchronously.\n   * @param roomId - ID of the room.\n   * @param request - Request for updating participants in a room.\n   * @param options - Operational options.\n   * @returns a list of all the participants in the room.\n   */\n  public async updateParticipants(\n    roomId: string,\n    participants: RoomParticipant[],\n    options: UpdateParticipantsOptions = {}\n  ): Promise<void> {\n    return tracingClient.withSpan(\n      \"RoomsClient-UpdateParticipants\",\n      options,\n      async (updatedOptions) => {\n        await this.client.rooms.updateParticipants(\n          roomId,\n          {\n            participants: participants.map((participant) =>\n              mapToRoomParticipantRestModel(participant)\n            ),\n          },\n          updatedOptions\n        );\n      }\n    );\n  }\n\n  /**\n   * Removes Participants from a Room asynchronously.\n   * @param roomId - ID of the room.\n   * @param request - Request for deleting participants in a room.\n   * @param options - Operational options.\n   * @returns a list of all the participants in the room.\n   */\n  public async removeParticipants(\n    roomId: string,\n    participants: CommunicationUserIdentifier[],\n    options: RemoveParticipantsOptions = {}\n  ): Promise<void> {\n    return tracingClient.withSpan(\n      \"RoomsClient-RemoveParticipants\",\n      options,\n      async (updatedOptions) => {\n        await this.client.rooms.removeParticipants(\n          roomId,\n          {\n            participants: participants!.map((participant) =>\n              mapCommunicationIdentifierToRoomParticipantRestModel(participant)\n            ),\n          },\n          updatedOptions\n        );\n      }\n    );\n  }\n}\n"],"names":["createClientLogger","createTracingClient","CreateRoomRequestMapper","UpdateRoomRequestMapper","AddParticipantsRequestMapper","UpdateParticipantsRequestMapper","RemoveParticipantsRequestMapper","coreClient","Mappers.RoomModel","Mappers.CommunicationErrorResponse","Mappers.RoomsCreateRoomExceptionHeaders","Parameters.createRoomRequest","Parameters.apiVersion","Parameters.endpoint","Parameters.contentType","Parameters.accept","Parameters.repeatabilityRequestID","Parameters.repeatabilityFirstSent","Mappers.RoomsGetRoomExceptionHeaders","Parameters.roomId","Mappers.RoomsUpdateRoomExceptionHeaders","Parameters.patchRoomRequest","Mappers.RoomsDeleteRoomExceptionHeaders","Mappers.ParticipantsCollection","Mappers.RoomsGetParticipantsExceptionHeaders","Mappers.RoomsAddParticipantsExceptionHeaders","Parameters.addParticipantsRequest","Mappers.RoomsUpdateParticipantsExceptionHeaders","Parameters.updateParticipantsRequest","Mappers.RoomsRemoveParticipantsExceptionHeaders","Parameters.removeParticipantsRequest","__rest","getIdentifierKind","serializeCommunicationIdentifier","deserializeCommunicationIdentifier","uuidv4","isKeyCredential","parseClientArguments","createCommunicationAuthPolicy"],"mappings":"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"}