{"version":3,"file":"rooms.js","sourceRoot":"","sources":["../../../../../src/generated/src/operationsInterfaces/rooms.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  CreateRoomRequest,\n  RoomsCreateRoomOptionalParams,\n  RoomsCreateRoomResponse,\n  RoomsGetRoomOptionalParams,\n  RoomsGetRoomResponse,\n  RoomsUpdateRoomOptionalParams,\n  RoomsUpdateRoomResponse,\n  RoomsDeleteRoomOptionalParams,\n  RoomsGetParticipantsOptionalParams,\n  RoomsGetParticipantsResponse,\n  AddParticipantsRequest,\n  RoomsAddParticipantsOptionalParams,\n  RoomsAddParticipantsResponse,\n  UpdateParticipantsRequest,\n  RoomsUpdateParticipantsOptionalParams,\n  RoomsUpdateParticipantsResponse,\n  RemoveParticipantsRequest,\n  RoomsRemoveParticipantsOptionalParams,\n  RoomsRemoveParticipantsResponse\n} from \"../models\";\n\n/** Interface representing a Rooms. */\nexport interface Rooms {\n  /**\n   * Creates a new room.\n   * @param createRoomRequest The create room request body.\n   * @param options The options parameters.\n   */\n  createRoom(\n    createRoomRequest: CreateRoomRequest,\n    options?: RoomsCreateRoomOptionalParams\n  ): Promise<RoomsCreateRoomResponse>;\n  /**\n   * Retrieves an existing room by id.\n   * @param roomId The id of the room requested\n   * @param options The options parameters.\n   */\n  getRoom(\n    roomId: string,\n    options?: RoomsGetRoomOptionalParams\n  ): Promise<RoomsGetRoomResponse>;\n  /**\n   * Update a room with given changes.\n   * @param roomId The id of the room requested\n   * @param options The options parameters.\n   */\n  updateRoom(\n    roomId: string,\n    options?: RoomsUpdateRoomOptionalParams\n  ): Promise<RoomsUpdateRoomResponse>;\n  /**\n   * Delete a room.\n   * @param roomId The id of the room to be deleted\n   * @param options The options parameters.\n   */\n  deleteRoom(\n    roomId: string,\n    options?: RoomsDeleteRoomOptionalParams\n  ): Promise<void>;\n  /**\n   * Get participants in a room.\n   * @param roomId The id of the room to get participants from\n   * @param options The options parameters.\n   */\n  getParticipants(\n    roomId: string,\n    options?: RoomsGetParticipantsOptionalParams\n  ): Promise<RoomsGetParticipantsResponse>;\n  /**\n   * Adds participants to a room. If participants already exist, no change occurs.\n   * @param roomId Room id to add participants.\n   * @param addParticipantsRequest Participants to be added to the room.\n   * @param options The options parameters.\n   */\n  addParticipants(\n    roomId: string,\n    addParticipantsRequest: AddParticipantsRequest,\n    options?: RoomsAddParticipantsOptionalParams\n  ): Promise<RoomsAddParticipantsResponse>;\n  /**\n   * Update participants in a room.\n   * @param roomId The room id.\n   * @param updateParticipantsRequest Participants in a room to be updated.\n   * @param options The options parameters.\n   */\n  updateParticipants(\n    roomId: string,\n    updateParticipantsRequest: UpdateParticipantsRequest,\n    options?: RoomsUpdateParticipantsOptionalParams\n  ): Promise<RoomsUpdateParticipantsResponse>;\n  /**\n   * Remove participants from a room.\n   * @param roomId Room id to remove the participants from.\n   * @param removeParticipantsRequest Participants in a room to be removed.\n   * @param options The options parameters.\n   */\n  removeParticipants(\n    roomId: string,\n    removeParticipantsRequest: RemoveParticipantsRequest,\n    options?: RoomsRemoveParticipantsOptionalParams\n  ): Promise<RoomsRemoveParticipantsResponse>;\n}\n"]}