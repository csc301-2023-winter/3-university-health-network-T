/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { CreateRoomRequest as CreateRoomRequestMapper, UpdateRoomRequest as UpdateRoomRequestMapper, AddParticipantsRequest as AddParticipantsRequestMapper, UpdateParticipantsRequest as UpdateParticipantsRequestMapper, RemoveParticipantsRequest as RemoveParticipantsRequestMapper } from "../models/mappers";
export const contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String"
        }
    }
};
export const createRoomRequest = {
    parameterPath: "createRoomRequest",
    mapper: CreateRoomRequestMapper
};
export const accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
export const endpoint = {
    parameterPath: "endpoint",
    mapper: {
        serializedName: "endpoint",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2022-02-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const repeatabilityRequestID = {
    parameterPath: ["options", "repeatabilityRequestID"],
    mapper: {
        serializedName: "Repeatability-Request-ID",
        type: {
            name: "Uuid"
        }
    }
};
export const repeatabilityFirstSent = {
    parameterPath: ["options", "repeatabilityFirstSent"],
    mapper: {
        serializedName: "Repeatability-First-Sent",
        type: {
            name: "DateTime"
        }
    }
};
export const roomId = {
    parameterPath: "roomId",
    mapper: {
        serializedName: "roomId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const patchRoomRequest = {
    parameterPath: ["options", "patchRoomRequest"],
    mapper: UpdateRoomRequestMapper
};
export const addParticipantsRequest = {
    parameterPath: "addParticipantsRequest",
    mapper: AddParticipantsRequestMapper
};
export const updateParticipantsRequest = {
    parameterPath: "updateParticipantsRequest",
    mapper: UpdateParticipantsRequestMapper
};
export const removeParticipantsRequest = {
    parameterPath: "removeParticipantsRequest",
    mapper: RemoveParticipantsRequestMapper
};
//# sourceMappingURL=parameters.js.map