{"version":3,"file":"rooms.js","sourceRoot":"","sources":["../../../../../src/generated/src/operations/rooms.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Rooms } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { RoomsApiClient } from \"../roomsApiClient\";\nimport {\n  CreateRoomRequest,\n  RoomsCreateRoomOptionalParams,\n  RoomsCreateRoomResponse,\n  RoomsGetRoomOptionalParams,\n  RoomsGetRoomResponse,\n  RoomsUpdateRoomOptionalParams,\n  RoomsUpdateRoomResponse,\n  RoomsDeleteRoomOptionalParams,\n  RoomsGetParticipantsOptionalParams,\n  RoomsGetParticipantsResponse,\n  AddParticipantsRequest,\n  RoomsAddParticipantsOptionalParams,\n  RoomsAddParticipantsResponse,\n  UpdateParticipantsRequest,\n  RoomsUpdateParticipantsOptionalParams,\n  RoomsUpdateParticipantsResponse,\n  RemoveParticipantsRequest,\n  RoomsRemoveParticipantsOptionalParams,\n  RoomsRemoveParticipantsResponse\n} from \"../models\";\n\n/** Class containing Rooms operations. */\nexport class RoomsImpl implements Rooms {\n  private readonly client: RoomsApiClient;\n\n  /**\n   * Initialize a new instance of the class Rooms class.\n   * @param client Reference to the service client\n   */\n  constructor(client: RoomsApiClient) {\n    this.client = client;\n  }\n\n  /**\n   * Creates a new room.\n   * @param createRoomRequest The create room request body.\n   * @param options The options parameters.\n   */\n  createRoom(\n    createRoomRequest: CreateRoomRequest,\n    options?: RoomsCreateRoomOptionalParams\n  ): Promise<RoomsCreateRoomResponse> {\n    return this.client.sendOperationRequest(\n      { createRoomRequest, options },\n      createRoomOperationSpec\n    );\n  }\n\n  /**\n   * Retrieves an existing room by id.\n   * @param roomId The id of the room requested\n   * @param options The options parameters.\n   */\n  getRoom(\n    roomId: string,\n    options?: RoomsGetRoomOptionalParams\n  ): Promise<RoomsGetRoomResponse> {\n    return this.client.sendOperationRequest(\n      { roomId, options },\n      getRoomOperationSpec\n    );\n  }\n\n  /**\n   * Update a room with given changes.\n   * @param roomId The id of the room requested\n   * @param options The options parameters.\n   */\n  updateRoom(\n    roomId: string,\n    options?: RoomsUpdateRoomOptionalParams\n  ): Promise<RoomsUpdateRoomResponse> {\n    return this.client.sendOperationRequest(\n      { roomId, options },\n      updateRoomOperationSpec\n    );\n  }\n\n  /**\n   * Delete a room.\n   * @param roomId The id of the room to be deleted\n   * @param options The options parameters.\n   */\n  deleteRoom(\n    roomId: string,\n    options?: RoomsDeleteRoomOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { roomId, options },\n      deleteRoomOperationSpec\n    );\n  }\n\n  /**\n   * Get participants in a room.\n   * @param roomId The id of the room to get participants from\n   * @param options The options parameters.\n   */\n  getParticipants(\n    roomId: string,\n    options?: RoomsGetParticipantsOptionalParams\n  ): Promise<RoomsGetParticipantsResponse> {\n    return this.client.sendOperationRequest(\n      { roomId, options },\n      getParticipantsOperationSpec\n    );\n  }\n\n  /**\n   * Adds participants to a room. If participants already exist, no change occurs.\n   * @param roomId Room id to add participants.\n   * @param addParticipantsRequest Participants to be added to the room.\n   * @param options The options parameters.\n   */\n  addParticipants(\n    roomId: string,\n    addParticipantsRequest: AddParticipantsRequest,\n    options?: RoomsAddParticipantsOptionalParams\n  ): Promise<RoomsAddParticipantsResponse> {\n    return this.client.sendOperationRequest(\n      { roomId, addParticipantsRequest, options },\n      addParticipantsOperationSpec\n    );\n  }\n\n  /**\n   * Update participants in a room.\n   * @param roomId The room id.\n   * @param updateParticipantsRequest Participants in a room to be updated.\n   * @param options The options parameters.\n   */\n  updateParticipants(\n    roomId: string,\n    updateParticipantsRequest: UpdateParticipantsRequest,\n    options?: RoomsUpdateParticipantsOptionalParams\n  ): Promise<RoomsUpdateParticipantsResponse> {\n    return this.client.sendOperationRequest(\n      { roomId, updateParticipantsRequest, options },\n      updateParticipantsOperationSpec\n    );\n  }\n\n  /**\n   * Remove participants from a room.\n   * @param roomId Room id to remove the participants from.\n   * @param removeParticipantsRequest Participants in a room to be removed.\n   * @param options The options parameters.\n   */\n  removeParticipants(\n    roomId: string,\n    removeParticipantsRequest: RemoveParticipantsRequest,\n    options?: RoomsRemoveParticipantsOptionalParams\n  ): Promise<RoomsRemoveParticipantsResponse> {\n    return this.client.sendOperationRequest(\n      { roomId, removeParticipantsRequest, options },\n      removeParticipantsOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createRoomOperationSpec: coreClient.OperationSpec = {\n  path: \"/rooms\",\n  httpMethod: \"POST\",\n  responses: {\n    201: {\n      bodyMapper: Mappers.RoomModel\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.RoomsCreateRoomExceptionHeaders\n    }\n  },\n  requestBody: Parameters.createRoomRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.repeatabilityRequestID,\n    Parameters.repeatabilityFirstSent\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst getRoomOperationSpec: coreClient.OperationSpec = {\n  path: \"/rooms/{roomId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoomModel\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.RoomsGetRoomExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.roomId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateRoomOperationSpec: coreClient.OperationSpec = {\n  path: \"/rooms/{roomId}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoomModel\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.RoomsUpdateRoomExceptionHeaders\n    }\n  },\n  requestBody: Parameters.patchRoomRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.roomId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteRoomOperationSpec: coreClient.OperationSpec = {\n  path: \"/rooms/{roomId}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.RoomsDeleteRoomExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.roomId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getParticipantsOperationSpec: coreClient.OperationSpec = {\n  path: \"/rooms/{roomId}/participants\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ParticipantsCollection\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.RoomsGetParticipantsExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.roomId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst addParticipantsOperationSpec: coreClient.OperationSpec = {\n  path: \"/rooms/{roomId}/participants:add\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ParticipantsCollection\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.RoomsAddParticipantsExceptionHeaders\n    }\n  },\n  requestBody: Parameters.addParticipantsRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.roomId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst updateParticipantsOperationSpec: coreClient.OperationSpec = {\n  path: \"/rooms/{roomId}/participants:update\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ParticipantsCollection\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.RoomsUpdateParticipantsExceptionHeaders\n    }\n  },\n  requestBody: Parameters.updateParticipantsRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.roomId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst removeParticipantsOperationSpec: coreClient.OperationSpec = {\n  path: \"/rooms/{roomId}/participants:remove\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ParticipantsCollection\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse,\n      headersMapper: Mappers.RoomsRemoveParticipantsExceptionHeaders\n    }\n  },\n  requestBody: Parameters.removeParticipantsRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.roomId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\n"]}